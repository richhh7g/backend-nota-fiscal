// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: invoice.sql

package sqlc_pg

import (
	"context"
	"time"
)

const createInvoice = `-- name: CreateInvoice :one
INSERT INTO notas_fiscais(id, emissao_em, recebido_em, cnpj, chave) VALUES ($1, $2, $3, $4, $5) RETURNING id, created_at, emissao_em, recebido_em, cnpj, chave
`

type CreateInvoiceParams struct {
	ID         string
	EmissaoEm  time.Time
	RecebidoEm time.Time
	Cnpj       string
	Chave      string
}

func (q *Queries) CreateInvoice(ctx context.Context, arg CreateInvoiceParams) (NotasFiscais, error) {
	row := q.db.QueryRowContext(ctx, createInvoice,
		arg.ID,
		arg.EmissaoEm,
		arg.RecebidoEm,
		arg.Cnpj,
		arg.Chave,
	)
	var i NotasFiscais
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.EmissaoEm,
		&i.RecebidoEm,
		&i.Cnpj,
		&i.Chave,
	)
	return i, err
}

const findInvoiceKeyExists = `-- name: FindInvoiceKeyExists :one
SELECT id FROM notas_fiscais WHERE chave = $1
`

func (q *Queries) FindInvoiceKeyExists(ctx context.Context, chave string) (string, error) {
	row := q.db.QueryRowContext(ctx, findInvoiceKeyExists, chave)
	var id string
	err := row.Scan(&id)
	return id, err
}
