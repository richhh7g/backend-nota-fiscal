version: 3

vars:
  CLIENT_PATH: internal/infra/data/client

dotenv: ['.env', '.env.test']

tasks:
  build:
    desc: Build the application
    aliases: [b]
    cmd: go build -o bin/server-bin cmd/server/main.go

  start:
    desc: Start the application
    aliases: [s]
    cmd: go run cmd/server/main.go

  dev:
    desc: Start the application in development mode
    aliases: [d]
    cmd: air

  migration:generate:
    desc: Generate migrations
    aliases: [mg]
    cmd: migrate create --ext sql --dir "{{.CLIENT_PATH}}/database/sqlc_pg/migration" --tz UTC {{.CLI_ARGS}}
  migration:types:
    desc: Generate migration types
    aliases: [mt]
    cmd: sqlc generate
  migration:up:
    desc: Run migrations
    cmd: migrate --path="{{.CLIENT_PATH}}/database/sqlc_pg/migration" --database "$DATABASE_URL" up {{.CLI_ARGS}}
    silent: true
  migration:rollback:
    desc: Rollback migrations
    cmd: migrate --path="{{.CLIENT_PATH}}/database/sqlc_pg/migration" --database "$DATABASE_URL" down {{.CLI_ARGS}}
    silent: true

  compose:local:
    desc: Run docker compose
    aliases: [cl]
    cmd: docker compose -f .docker/compose/local.yml up {{.CLI_ARGS}}

  mod:
    desc: Downloads and tidy Go modules
    aliases: [m]
    cmds:
      - go mod download
      - go mod tidy

  lint:
    desc: Beautiful linter
    aliases: [l]
    sources:
      - './**/*.go'
    cmd: golangci-lint run
